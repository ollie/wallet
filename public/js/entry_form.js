// Generated by CoffeeScript 2.7.0
(function() {
  this.EntryForm = class EntryForm {
    constructor() {
      this._handleExpenseButtonClick = this._handleExpenseButtonClick.bind(this);
      this._handleIncomeButtonClick = this._handleIncomeButtonClick.bind(this);
      this._handleAmountInput = this._handleAmountInput.bind(this);
      this._handleTodayDateClick = this._handleTodayDateClick.bind(this);
      this._handleTagCombinationClick = this._handleTagCombinationClick.bind(this);
      this.expenseButton = $('.js-expense');
      if (!this.expenseButton.length) {
        return;
      }
      this.incomeButton = $('.js-income');
      this.amount = $('.js-amount');
      this.todayDate = $('.js-today-date');
      this.tagCombinations = $('.js-tag-combination');
      this.tagsSearchInput = $('.js-tags-search-input');
      this.expenseButton.on('click', this._handleExpenseButtonClick);
      this.incomeButton.on('click', this._handleIncomeButtonClick);
      this.amount.on('input', this._handleAmountInput);
      this.todayDate.on('click', this._handleTodayDateClick);
      this.tagCombinations.on('click', this._handleTagCombinationClick);
    }

    _handleExpenseButtonClick() {
      var value;
      value = Number(this.amount.val());
      if (value > 0) {
        this.amount.val(-value);
      }
      this.amount.data('type', 'expense').focus();
      this.expenseButton.addClass('btn-danger active').removeClass('btn-default');
      return this.incomeButton.removeClass('btn-success active').addClass('btn-default');
    }

    _handleIncomeButtonClick() {
      var value;
      value = Number(this.amount.val());
      if (value < 0) {
        this.amount.val(-value);
      }
      this.amount.data('type', 'income').focus();
      this.incomeButton.addClass('btn-success active').removeClass('btn-default');
      return this.expenseButton.removeClass('btn-danger active').addClass('btn-default');
    }

    _handleAmountInput() {
      var number, value;
      value = this.amount.val();
      if (value === '') {
        return;
      }
      number = Number(value);
      if ((this.amount.data('type') === 'expense' && number > 0) || (this.amount.data('type') === 'income' && number < 0)) {
        return this.amount.val(-value);
      }
    }

    _handleTodayDateClick(e) {
      var $button, $input, today;
      today = new Date();
      today = today.toISOString().substr(0, 10);
      $button = $(e.currentTarget);
      $input = $button.parents('.row:first').find('input');
      return $input.val(today);
    }

    _handleTagCombinationClick(e) {
      var $link;
      e.preventDefault();
      $link = $(e.currentTarget);
      return $link.find('[data-tag-name]').each((_, tag) => {
        var tagName;
        tagName = $(tag).data('tag-name');
        return this.tagsSearchInput.val(tagName).trigger('change');
      });
    }

  };

}).call(this);
